{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment-timezone';\nimport Select from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklySchedule = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(moment());\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n  useEffect(() => {\n    fetchData(selectedDate, timezone);\n  }, [selectedDate, timezone]);\n  const fetchData = async (date, tz) => {\n    try {\n      // You can directly import the data.json file\n      const response = await import('/data.json');\n      const data = response.default; // Accessing the default export\n      setWeeklySchedule(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleDateChange = date => {\n    setSelectedDate(moment(date));\n  };\n  const handleTimezoneChange = selectedOption => {\n    setTimezone(selectedOption.value);\n  };\n  const displayWeeklySchedule = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weekly Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: weeklySchedule.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.Date, \" - \", item.Time, \" - \", item.Name]\n        }, item.Id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n  const loadPreviousWeek = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'week'));\n  };\n  const loadNextWeek = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'week'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weekly Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate.toDate(),\n        onChange: handleDateChange,\n        dateFormat: \"yyyy-MM-dd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Timezone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: [{\n          value: 'UTC',\n          label: 'UTC'\n        }, {\n          value: 'America/New_York',\n          label: 'America/New_York'\n        }\n        // Add more timezone options as needed\n        ],\n        value: {\n          value: timezone,\n          label: timezone\n        },\n        onChange: handleTimezoneChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), displayWeeklySchedule(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadPreviousWeek,\n      children: \"Previous Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadNextWeek,\n      children: \"Next Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklySchedule, \"NlSjP8sAVrNwFg/TA0Crred5fgY=\");\n_c = WeeklySchedule;\nexport default WeeklySchedule;\nvar _c;\n$RefreshReg$(_c, \"WeeklySchedule\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","moment","Select","jsxDEV","_jsxDEV","WeeklySchedule","_s","selectedDate","setSelectedDate","timezone","setTimezone","weeklySchedule","setWeeklySchedule","fetchData","date","tz","response","data","default","error","console","handleDateChange","handleTimezoneChange","selectedOption","value","displayWeeklySchedule","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","Date","Time","Name","Id","loadPreviousWeek","clone","subtract","loadNextWeek","add","selected","toDate","onChange","dateFormat","options","label","onClick","_c","$RefreshReg$"],"sources":["D:/React Project/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment-timezone';\nimport Select from 'react-select';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst WeeklySchedule = () => {\n  const [selectedDate, setSelectedDate] = useState(moment());\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n\n  useEffect(() => {\n    fetchData(selectedDate, timezone);\n  }, [selectedDate, timezone]);\n\n  const fetchData = async (date, tz) => {\n    try {\n      // You can directly import the data.json file\n      const response = await import('/data.json');\n      const data = response.default; // Accessing the default export\n      setWeeklySchedule(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(moment(date));\n  };\n\n  const handleTimezoneChange = (selectedOption) => {\n    setTimezone(selectedOption.value);\n  };\n\n  const displayWeeklySchedule = () => {\n    return (\n      <div>\n        <h3>Weekly Schedule</h3>\n        <ul>\n          {weeklySchedule.map((item) => (\n            <li key={item.Id}>\n              {item.Date} - {item.Time} - {item.Name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n  const loadPreviousWeek = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'week'));\n  };\n\n  const loadNextWeek = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'week'));\n  };\n\n  return (\n    <div>\n      <h2>Weekly Schedule</h2>\n\n      <div>\n        <label>Date:</label>\n        <DatePicker\n          selected={selectedDate.toDate()}\n          onChange={handleDateChange}\n          dateFormat=\"yyyy-MM-dd\"\n        />\n      </div>\n\n      <div>\n        <label>Timezone:</label>\n        <Select\n          options={[\n            { value: 'UTC', label: 'UTC' },\n            { value: 'America/New_York', label: 'America/New_York' },\n            // Add more timezone options as needed\n          ]}\n          value={{ value: timezone, label: timezone }}\n          onChange={handleTimezoneChange}\n        />\n      </div>\n\n      {/* Display weekly schedule */}\n      {displayWeeklySchedule()}\n\n      {/* Add Previous & Next buttons to move between weeks */}\n      <button onClick={loadPreviousWeek}>Previous Week</button>\n      <button onClick={loadNextWeek}>Next Week</button>\n    </div>\n  );\n};\n\nexport default WeeklySchedule;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}