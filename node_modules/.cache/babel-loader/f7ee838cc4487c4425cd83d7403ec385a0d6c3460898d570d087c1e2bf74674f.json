{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport Select from 'react-select';\nimport './App.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklySchedule = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(moment().startOf('week')); // Set to the start of the current week\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n  useEffect(() => {\n    fetchData(selectedDate, timezone);\n  }, [selectedDate, timezone]);\n  const fetchData = async (date, tz) => {\n    try {\n      const response = await import('./data.json');\n      const data = response.default;\n      setWeeklySchedule(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleTimezoneChange = selectedOption => {\n    setTimezone(selectedOption.value);\n  };\n  const loadPreviousWeek = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'week'));\n  };\n  const loadNextWeek = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'week'));\n  };\n  const getWorkingDays = startDate => {\n    const days = [];\n    let pastDayFound = false; // Variable to track whether a past day has been found\n    for (let i = 0; i < 7; i++) {\n      const currentDay = startDate.clone().add(i, 'days');\n      if (currentDay.day() >= 1 && currentDay.day() <= 5) {\n        if (!pastDayFound && currentDay.isBefore(moment(), 'day')) {\n          pastDayFound = true;\n          days.push({\n            day: currentDay,\n            isPast: true\n          });\n        } else {\n          days.push({\n            day: currentDay,\n            isPast: false\n          });\n        }\n      }\n    }\n    return days;\n  };\n  const handleCheckboxChange = (date, time) => {\n    // Handle checkbox change logic here\n    console.log(`Checkbox for ${date} - ${time} changed`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weekly-schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadPreviousWeek,\n        children: \"Previous Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Date: \", moment().format('YYYY-MM-DD')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadNextWeek,\n        children: \"Next Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timezone-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Timezone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: [{\n          value: 'UTC',\n          label: 'UTC'\n        }, {\n          value: 'America/New_York',\n          label: 'America/New_York'\n        }\n        // Add more timezone options as needed\n        ],\n        value: {\n          value: timezone,\n          label: timezone\n        },\n        onChange: handleTimezoneChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: getWorkingDays(selectedDate).map(({\n            day,\n            isPast\n          }) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [day.format('dddd'), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 39\n              }, this), day.format('YYYY-MM-DD')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), weeklySchedule.filter(item => moment(item.Date).isSame(day, 'day')).map((item, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isPast && index === 0 ? 'Past' : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [item.Time, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: () => handleCheckboxChange(item.Date, item.Time)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this)\n            }, `${item.Date}-${item.Time}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this))]\n          }, day.format('YYYY-MM-DD'), true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklySchedule, \"nT/Dz+U7uXY2alPWLrU37W9kQhg=\");\n_c = WeeklySchedule;\nexport default WeeklySchedule;\nvar _c;\n$RefreshReg$(_c, \"WeeklySchedule\");","map":{"version":3,"names":["React","useState","useEffect","moment","Select","jsxDEV","_jsxDEV","WeeklySchedule","_s","selectedDate","setSelectedDate","startOf","timezone","setTimezone","weeklySchedule","setWeeklySchedule","fetchData","date","tz","response","data","default","error","console","handleTimezoneChange","selectedOption","value","loadPreviousWeek","clone","subtract","loadNextWeek","add","getWorkingDays","startDate","days","pastDayFound","i","currentDay","day","isBefore","push","isPast","handleCheckboxChange","time","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","format","options","label","onChange","map","filter","item","Date","isSame","index","Time","type","_c","$RefreshReg$"],"sources":["D:/React Project/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport Select from 'react-select';\nimport './App.css'; // Import your CSS file\n\nconst WeeklySchedule = () => {\n  const [selectedDate, setSelectedDate] = useState(moment().startOf('week')); // Set to the start of the current week\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n\n  useEffect(() => {\n    fetchData(selectedDate, timezone);\n  }, [selectedDate, timezone]);\n\n  const fetchData = async (date, tz) => {\n    try {\n      const response = await import('./data.json');\n      const data = response.default;\n\n      setWeeklySchedule(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleTimezoneChange = (selectedOption) => {\n    setTimezone(selectedOption.value);\n  };\n\n  const loadPreviousWeek = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'week'));\n  };\n\n  const loadNextWeek = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'week'));\n  };\n\n  const getWorkingDays = (startDate) => {\n    const days = [];\n    let pastDayFound = false; // Variable to track whether a past day has been found\n    for (let i = 0; i < 7; i++) {\n      const currentDay = startDate.clone().add(i, 'days');\n      if (currentDay.day() >= 1 && currentDay.day() <= 5) {\n        if (!pastDayFound && currentDay.isBefore(moment(), 'day')) {\n          pastDayFound = true;\n          days.push({ day: currentDay, isPast: true });\n        } else {\n          days.push({ day: currentDay, isPast: false });\n        }\n      }\n    }\n    return days;\n  };\n\n  const handleCheckboxChange = (date, time) => {\n    // Handle checkbox change logic here\n    console.log(`Checkbox for ${date} - ${time} changed`);\n  };\n\n  return (\n    <div className=\"weekly-schedule-container\">\n      <div className=\"date-navigation\">\n        <button onClick={loadPreviousWeek}>Previous Week</button>\n        <label>Current Date: {moment().format('YYYY-MM-DD')}</label>\n        <button onClick={loadNextWeek}>Next Week</button>\n      </div>\n\n      <div className=\"timezone-selector\">\n        <label>Timezone:</label>\n        <Select\n          options={[\n            { value: 'UTC', label: 'UTC' },\n            { value: 'America/New_York', label: 'America/New_York' },\n            // Add more timezone options as needed\n          ]}\n          value={{ value: timezone, label: timezone }}\n          onChange={handleTimezoneChange}\n        />\n      </div>\n\n      {/* Display weekly schedule */}\n      <div className=\"schedule-table\">\n        <table>\n          <tbody>\n            {getWorkingDays(selectedDate).map(({ day, isPast }) => (\n              <tr key={day.format('YYYY-MM-DD')}>\n                <td>\n                  {day.format('dddd')}<br />\n                  {day.format('YYYY-MM-DD')}\n                </td>\n                {weeklySchedule\n                  .filter((item) => moment(item.Date).isSame(day, 'day'))\n                  .map((item, index) => (\n                    <td key={`${item.Date}-${item.Time}`}>\n                      {isPast && index === 0 ? (\n                        'Past'\n                      ) : (\n                        <div>\n                          {item.Time}\n                          <br />\n                          <input\n                            type=\"checkbox\"\n                            onChange={() => handleCheckboxChange(item.Date, item.Time)}\n                          />\n                        </div>\n                      )}\n                    </td>\n                  ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklySchedule;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}