{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklyScheduler = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(moment().format('YYYY-MM-DD'));\n  const [timezone, setTimezone] = useState('UTC+0');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n  useEffect(() => {\n    // Fetch and update the weekly schedule when the component mounts or when date or timezone changes\n    loadWeeklySchedule(currentDate, timezone);\n  }, [currentDate, timezone]);\n  const loadWeeklySchedule = (date, selectedTimezone) => {\n    // Fetch your data from the backend or use local JSON data\n    // For simplicity, we'll use local JSON data\n    const jsonData = [{\n      Id: 101,\n      Name: 'test',\n      Date: '2023-07-20',\n      Time: '22:30'\n    }, {\n      Id: 102,\n      Name: 'test 1',\n      Date: '2023-07-21',\n      Time: '09:00'\n    }\n    // Add more data as needed\n    ];\n\n    // Adjust times based on the selected timezone\n    const adjustedSchedule = jsonData.map(item => {\n      const adjustedTime = moment.utc(`${item.Date} ${item.Time}`).utcOffset(selectedTimezone).format('HH:mm');\n      return {\n        ...item,\n        Time: adjustedTime\n      };\n    });\n    setWeeklySchedule(adjustedSchedule);\n  };\n  const handlePrevWeek = () => {\n    setCurrentDate(moment(currentDate).subtract(7, 'days').format('YYYY-MM-DD'));\n  };\n  const handleNextWeek = () => {\n    setCurrentDate(moment(currentDate).add(7, 'days').format('YYYY-MM-DD'));\n  };\n  const handleTimezoneChange = e => {\n    setTimezone(e.target.value);\n  };\n  const handleCheckboxChange = id => {\n    // Handle checkbox state changes as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: currentDate,\n        onChange: e => setCurrentDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevWeek,\n        children: \"Previous Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextWeek,\n        children: \"Next Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Timezone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timezone,\n        onChange: handleTimezoneChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"UTC+0\",\n          children: \"UTC+0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"UTC+5\",\n          children: \"UTC+5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: weeklySchedule.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: moment(item.Date).format('dddd')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => handleCheckboxChange(item.Id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, item.Id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyScheduler, \"cUyU+h3cbMVVVxx57hW9Jv6hO90=\");\n_c = WeeklyScheduler;\nexport default WeeklyScheduler;\nvar _c;\n$RefreshReg$(_c, \"WeeklyScheduler\");","map":{"version":3,"names":["React","useState","useEffect","moment","jsxDEV","_jsxDEV","WeeklyScheduler","_s","currentDate","setCurrentDate","format","timezone","setTimezone","weeklySchedule","setWeeklySchedule","loadWeeklySchedule","date","selectedTimezone","jsonData","Id","Name","Date","Time","adjustedSchedule","map","item","adjustedTime","utc","utcOffset","handlePrevWeek","subtract","handleNextWeek","add","handleTimezoneChange","e","target","value","handleCheckboxChange","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/React Project/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nconst WeeklyScheduler = () => {\n  const [currentDate, setCurrentDate] = useState(moment().format('YYYY-MM-DD'));\n  const [timezone, setTimezone] = useState('UTC+0');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n\n  useEffect(() => {\n    // Fetch and update the weekly schedule when the component mounts or when date or timezone changes\n    loadWeeklySchedule(currentDate, timezone);\n  }, [currentDate, timezone]);\n\n  const loadWeeklySchedule = (date, selectedTimezone) => {\n    // Fetch your data from the backend or use local JSON data\n    // For simplicity, we'll use local JSON data\n    const jsonData = [\n      { Id: 101, Name: 'test', Date: '2023-07-20', Time: '22:30' },\n      { Id: 102, Name: 'test 1', Date: '2023-07-21', Time: '09:00' },\n      // Add more data as needed\n    ];\n\n    // Adjust times based on the selected timezone\n    const adjustedSchedule = jsonData.map(item => {\n      const adjustedTime = moment.utc(`${item.Date} ${item.Time}`).utcOffset(selectedTimezone).format('HH:mm');\n      return { ...item, Time: adjustedTime };\n    });\n\n    setWeeklySchedule(adjustedSchedule);\n  };\n\n  const handlePrevWeek = () => {\n    setCurrentDate(moment(currentDate).subtract(7, 'days').format('YYYY-MM-DD'));\n  };\n\n  const handleNextWeek = () => {\n    setCurrentDate(moment(currentDate).add(7, 'days').format('YYYY-MM-DD'));\n  };\n\n  const handleTimezoneChange = (e) => {\n    setTimezone(e.target.value);\n  };\n\n  const handleCheckboxChange = (id) => {\n    // Handle checkbox state changes as needed\n  };\n\n  return (\n    <div>\n      <div>\n        <label>Date:</label>\n        <input type=\"date\" value={currentDate} onChange={(e) => setCurrentDate(e.target.value)} />\n\n        <button onClick={handlePrevWeek}>Previous Week</button>\n        <button onClick={handleNextWeek}>Next Week</button>\n\n        <label>Timezone:</label>\n        <select value={timezone} onChange={handleTimezoneChange}>\n          <option value=\"UTC+0\">UTC+0</option>\n          <option value=\"UTC+5\">UTC+5</option>\n        </select>\n      </div>\n\n      <div>\n        <h2>Weekly Schedule</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Day</th>\n              <th>Time</th>\n              <th>Checkbox</th>\n            </tr>\n          </thead>\n          <tbody>\n            {weeklySchedule.map(item => (\n              <tr key={item.Id}>\n                <td>{item.Date}</td>\n                <td>{moment(item.Date).format('dddd')}</td>\n                <td>{item.Time}</td>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    onChange={() => handleCheckboxChange(item.Id)}\n                  />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyScheduler;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}