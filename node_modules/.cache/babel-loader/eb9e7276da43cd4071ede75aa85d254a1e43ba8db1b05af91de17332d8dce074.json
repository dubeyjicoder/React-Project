{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport Select from 'react-select';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklySchedule = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(moment().startOf('week'));\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n  useEffect(() => {\n    fetchData(selectedDate, timezone);\n  }, [selectedDate, timezone]);\n  const fetchData = async (date, tz) => {\n    try {\n      const response = await import('./data.json');\n      const data = response.default;\n      setWeeklySchedule(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleTimezoneChange = selectedOption => {\n    setTimezone(selectedOption.value);\n  };\n  const loadPreviousWeek = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'week'));\n  };\n  const loadNextWeek = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'week'));\n  };\n  const getWorkingDays = startDate => {\n    const days = [];\n    for (let i = 0; i < 7; i++) {\n      const currentDay = startDate.clone().add(i, 'days');\n      if (currentDay.day() >= 1 && currentDay.day() <= 5) {\n        days.push(currentDay);\n      }\n    }\n    return days;\n  };\n  const handleCheckboxChange = (date, time) => {\n    // we  Handle checkbox change logic here\n    console.log(`Checkbox for ${date} - ${time} changed`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weekly-schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadPreviousWeek,\n        children: \"Previous Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Date: \", moment().format('YYYY-MM-DD')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadNextWeek,\n        children: \"Next Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timezone-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Timezone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: [{\n          value: 'UTC',\n          label: 'UTC'\n        }, {\n          value: 'America/New_York',\n          label: 'America/New_York'\n        }],\n        value: {\n          value: timezone,\n          label: timezone\n        },\n        onChange: handleTimezoneChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: getWorkingDays(selectedDate).map(day => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [day.format('dddd'), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 39\n              }, this), day.format('YYYY-MM-DD')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), (item.Time === '13:00' || item.Time === '18:00') && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 75\n            }, this), weeklySchedule.filter(item => moment(item.Date).isSame(day, 'day')).map(item => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"time-slot\",\n              children: moment(day).isBefore(moment(), 'day') ? 'Past' : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: () => handleCheckboxChange(item.Date, item.Time)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 27\n                }, this), item.Time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this)\n            }, `${item.Date}-${item.Time}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this))]\n          }, day.format('YYYY-MM-DD'), true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklySchedule, \"nT/Dz+U7uXY2alPWLrU37W9kQhg=\");\n_c = WeeklySchedule;\nexport default WeeklySchedule;\nvar _c;\n$RefreshReg$(_c, \"WeeklySchedule\");","map":{"version":3,"names":["React","useState","useEffect","moment","Select","jsxDEV","_jsxDEV","WeeklySchedule","_s","selectedDate","setSelectedDate","startOf","timezone","setTimezone","weeklySchedule","setWeeklySchedule","fetchData","date","tz","response","data","default","error","console","handleTimezoneChange","selectedOption","value","loadPreviousWeek","clone","subtract","loadNextWeek","add","getWorkingDays","startDate","days","i","currentDay","day","push","handleCheckboxChange","time","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","format","options","label","onChange","map","item","Time","filter","Date","isSame","isBefore","type","_c","$RefreshReg$"],"sources":["D:/React Project/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport Select from 'react-select';\nimport './App.css'; \n\nconst WeeklySchedule = () => {\n  const [selectedDate, setSelectedDate] = useState(moment().startOf('week')); \n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n\n  useEffect(() => {\n    fetchData(selectedDate, timezone);\n  }, [selectedDate, timezone]);\n\n  const fetchData = async (date, tz) => {\n    try {\n      const response = await import('./data.json');\n      const data = response.default;\n\n      setWeeklySchedule(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleTimezoneChange = (selectedOption) => {\n    setTimezone(selectedOption.value);\n  };\n\n  const loadPreviousWeek = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'week'));\n  };\n\n  const loadNextWeek = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'week'));\n  };\n\n  \n  \n \n  const getWorkingDays = (startDate) => {\n    const days = [];\n    for (let i = 0; i < 7; i++) {\n      const currentDay = startDate.clone().add(i, 'days');\n      if (currentDay.day() >= 1 && currentDay.day() <= 5) {\n        days.push(currentDay);\n      }\n    }\n    return days;\n  };\n\n\n  \n  const handleCheckboxChange = (date, time) => {\n    // we  Handle checkbox change logic here\n    console.log(`Checkbox for ${date} - ${time} changed`);\n  };\n  return (\n    <div className=\"weekly-schedule-container\">\n    \n      <div className=\"date-navigation\">\n        <button onClick={loadPreviousWeek}>Previous Week</button>\n        <label>Current Date: {moment().format('YYYY-MM-DD')}</label>\n        <button onClick={loadNextWeek}>Next Week</button>\n      </div>\n\n      <div className=\"timezone-selector\">\n        <label>Timezone:</label>\n        <Select\n          options={[\n            { value: 'UTC', label: 'UTC' },\n            { value: 'America/New_York', label: 'America/New_York' },\n           \n          ]}\n          value={{ value: timezone, label: timezone }}\n          onChange={handleTimezoneChange}\n        />\n      </div>\n\n      \n      <div className=\"schedule-table\">\n        <table>\n          <tbody>\n            {getWorkingDays(selectedDate).map((day) => (\n              <tr key={day.format('YYYY-MM-DD')}>\n                <td>\n                  {day.format('dddd')}<br />\n                  {day.format('YYYY-MM-DD')}\n                </td>{(item.Time === '13:00' || item.Time === '18:00') && <br/>}\n\n                {weeklySchedule\n                  .filter((item) => moment(item.Date).isSame(day, 'day'))\n                  .map((item) => (\n                    <td key={`${item.Date}-${item.Time}`}className=\"time-slot\">\n                      \n                      {moment(day).isBefore(moment(), 'day') ? (\n                        'Past'\n                      ) : (\n                        <div>\n                          \n                          <input\n                            type=\"checkbox\"\n                            onChange={() => handleCheckboxChange(item.Date, item.Time)}\n                          />\n                          {item.Time}\n                        </div>\n                      )}\n                    </td>\n                  ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklySchedule; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}