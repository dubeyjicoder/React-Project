{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklySchedule = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(moment());\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n  useEffect(() => {\n    fetchData(selectedDate, timezone);\n  }, [selectedDate, timezone]);\n  const fetchData = async (date, tz) => {\n    try {\n      // You can directly import the data.json file\n      const response = await import('./data.json');\n      const data = response.default; // Accessing the default export\n\n      // Filter data for the current week\n      const startOfWeek = date.clone().startOf('week');\n      const endOfWeek = date.clone().endOf('week');\n      const filteredData = data.filter(item => moment(item.Date).isBetween(startOfWeek, endOfWeek, null, '[]'));\n      setWeeklySchedule(filteredData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleTimezoneChange = selectedOption => {\n    setTimezone(selectedOption.value);\n  };\n  const loadPreviousWeek = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'week'));\n  };\n  const loadNextWeek = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'week'));\n  };\n  const getWorkingDays = startDate => {\n    const days = [];\n    for (let i = 0; i < 5; i++) {\n      days.push(startDate.clone().add(i, 'days'));\n    }\n    return days;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weekly Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Date: \", selectedDate.format('YYYY-MM-DD')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Timezone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: [{\n          value: 'UTC',\n          label: 'UTC'\n        }, {\n          value: 'America/New_York',\n          label: 'America/New_York'\n        }\n        // Add more timezone options as needed\n        ],\n        value: {\n          value: timezone,\n          label: timezone\n        },\n        onChange: handleTimezoneChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weekly Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), getWorkingDays(selectedDate).map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: day.isBefore(moment(), 'day') ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [day.format('YYYY-MM-DD'), \" (Past)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this) : day.format('YYYY-MM-DD')\n            }, day.format('YYYY-MM-DD'), false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: weeklySchedule.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), getWorkingDays(selectedDate).map(day => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: moment(item.Date).isSame(day, 'day') ? `${item.Time} - ${item.Name}` : ''\n            }, day.format('YYYY-MM-DD'), false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this))]\n          }, item.Id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadPreviousWeek,\n      children: \"Previous Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadNextWeek,\n      children: \"Next Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklySchedule, \"NlSjP8sAVrNwFg/TA0Crred5fgY=\");\n_c = WeeklySchedule;\nexport default WeeklySchedule;\nvar _c;\n$RefreshReg$(_c, \"WeeklySchedule\");","map":{"version":3,"names":["React","useState","useEffect","moment","Select","jsxDEV","_jsxDEV","WeeklySchedule","_s","selectedDate","setSelectedDate","timezone","setTimezone","weeklySchedule","setWeeklySchedule","fetchData","date","tz","response","data","default","startOfWeek","clone","startOf","endOfWeek","endOf","filteredData","filter","item","Date","isBetween","error","console","handleTimezoneChange","selectedOption","value","loadPreviousWeek","subtract","loadNextWeek","add","getWorkingDays","startDate","days","i","push","children","fileName","_jsxFileName","lineNumber","columnNumber","format","options","label","onChange","map","day","isBefore","isSame","Time","Name","Id","onClick","_c","$RefreshReg$"],"sources":["D:/React Project/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport Select from 'react-select';\n\nconst WeeklySchedule = () => {\n  const [selectedDate, setSelectedDate] = useState(moment());\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n\n  useEffect(() => {\n    fetchData(selectedDate, timezone);\n  }, [selectedDate, timezone]);\n\n  const fetchData = async (date, tz) => {\n    try {\n      // You can directly import the data.json file\n      const response = await import('./data.json');\n      const data = response.default; // Accessing the default export\n\n      // Filter data for the current week\n      const startOfWeek = date.clone().startOf('week');\n      const endOfWeek = date.clone().endOf('week');\n      const filteredData = data.filter((item) =>\n        moment(item.Date).isBetween(startOfWeek, endOfWeek, null, '[]')\n      );\n\n      setWeeklySchedule(filteredData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleTimezoneChange = (selectedOption) => {\n    setTimezone(selectedOption.value);\n  };\n\n  const loadPreviousWeek = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'week'));\n  };\n\n  const loadNextWeek = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'week'));\n  };\n\n  const getWorkingDays = (startDate) => {\n    const days = [];\n    for (let i = 0; i < 5; i++) {\n      days.push(startDate.clone().add(i, 'days'));\n    }\n    return days;\n  };\n\n  return (\n    <div>\n      <h2>Weekly Schedule</h2>\n\n      <div>\n        <label>Current Date: {selectedDate.format('YYYY-MM-DD')}</label>\n      </div>\n\n      <div>\n        <label>Timezone:</label>\n        <Select\n          options={[\n            { value: 'UTC', label: 'UTC' },\n            { value: 'America/New_York', label: 'America/New_York' },\n            // Add more timezone options as needed\n          ]}\n          value={{ value: timezone, label: timezone }}\n          onChange={handleTimezoneChange}\n        />\n      </div>\n\n      {/* Display weekly schedule */}\n      <div>\n        <h3>Weekly Schedule</h3>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              {getWorkingDays(selectedDate).map((day) => (\n                <th key={day.format('YYYY-MM-DD')}>\n                  {day.isBefore(moment(), 'day') ? (\n                    <span>{day.format('YYYY-MM-DD')} (Past)</span>\n                  ) : (\n                    day.format('YYYY-MM-DD')\n                  )}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {weeklySchedule.map((item) => (\n              <tr key={item.Id}>\n                <td>{item.Date}</td>\n                {getWorkingDays(selectedDate).map((day) => (\n                  <td key={day.format('YYYY-MM-DD')}>\n                    {moment(item.Date).isSame(day, 'day') ? `${item.Time} - ${item.Name}` : ''}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Add Previous & Next buttons to move between weeks */}\n      <button onClick={loadPreviousWeek}>Previous Week</button>\n      <button onClick={loadNextWeek}>Next Week</button>\n    </div>\n  );\n};\n\nexport default WeeklySchedule;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}