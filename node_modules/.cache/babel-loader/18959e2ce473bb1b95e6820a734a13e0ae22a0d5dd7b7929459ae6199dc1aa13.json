{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport Select from 'react-select';\nimport './App.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklySchedule = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(moment().startOf('week')); // Set to the start of the current week\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n  useEffect(() => {\n    fetchData(selectedDate, timezone);\n  }, [selectedDate, timezone]);\n  const fetchData = async (date, tz) => {\n    try {\n      // You can directly import the data.json file\n      const response = await import('./data.json');\n      const data = response.default; // Accessing the default export\n\n      setWeeklySchedule(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleTimezoneChange = selectedOption => {\n    setTimezone(selectedOption.value);\n  };\n  const loadPreviousWeek = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'week'));\n  };\n  const loadNextWeek = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'week'));\n  };\n  const getWorkingDays = startDate => {\n    const days = [];\n    for (let i = 0; i < 5; i++) {\n      days.push(startDate.clone().add(i, 'days'));\n    }\n    return days;\n  };\n  const handleCheckboxChange = (date, time) => {\n    // Handle checkbox change logic here\n    console.log(`Checkbox for ${date} - ${time} changed`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weekly-schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weekly Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadPreviousWeek,\n        children: \"Previous Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Date: \", moment().format('YYYY-MM-DD')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadNextWeek,\n        children: \"Next Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timezone-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Timezone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: [{\n          value: 'UTC',\n          label: 'UTC'\n        }, {\n          value: 'America/New_York',\n          label: 'America/New_York'\n        }\n        // Add more timezone options as needed\n        ],\n        value: {\n          value: timezone,\n          label: timezone\n        },\n        onChange: handleTimezoneChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: getWorkingDays(selectedDate).map(day => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: day.format('YYYY-MM-DD')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), weeklySchedule.filter(item => moment(item.Date).isSame(day, 'day')).map(item => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [item.Time, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => handleCheckboxChange(item.Date, item.Time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 23\n              }, this)]\n            }, `${item.Date}-${item.Time}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this))]\n          }, day.format('YYYY-MM-DD'), true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklySchedule, \"nT/Dz+U7uXY2alPWLrU37W9kQhg=\");\n_c = WeeklySchedule;\nexport default WeeklySchedule;\nvar _c;\n$RefreshReg$(_c, \"WeeklySchedule\");","map":{"version":3,"names":["React","useState","useEffect","moment","Select","jsxDEV","_jsxDEV","WeeklySchedule","_s","selectedDate","setSelectedDate","startOf","timezone","setTimezone","weeklySchedule","setWeeklySchedule","fetchData","date","tz","response","data","default","error","console","handleTimezoneChange","selectedOption","value","loadPreviousWeek","clone","subtract","loadNextWeek","add","getWorkingDays","startDate","days","i","push","handleCheckboxChange","time","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","format","options","label","onChange","map","day","filter","item","Date","isSame","Time","type","_c","$RefreshReg$"],"sources":["D:/React Project/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport Select from 'react-select';\nimport './App.css'; // Import your CSS file\n\nconst WeeklySchedule = () => {\n  const [selectedDate, setSelectedDate] = useState(moment().startOf('week')); // Set to the start of the current week\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n\n  useEffect(() => {\n    fetchData(selectedDate, timezone);\n  }, [selectedDate, timezone]);\n\n  const fetchData = async (date, tz) => {\n    try {\n      // You can directly import the data.json file\n      const response = await import('./data.json');\n      const data = response.default; // Accessing the default export\n\n      setWeeklySchedule(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleTimezoneChange = (selectedOption) => {\n    setTimezone(selectedOption.value);\n  };\n\n  const loadPreviousWeek = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'week'));\n  };\n\n  const loadNextWeek = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'week'));\n  };\n\n  const getWorkingDays = (startDate) => {\n    const days = [];\n    for (let i = 0; i < 5; i++) {\n      days.push(startDate.clone().add(i, 'days'));\n    }\n    return days;\n  };\n\n  const handleCheckboxChange = (date, time) => {\n    // Handle checkbox change logic here\n    console.log(`Checkbox for ${date} - ${time} changed`);\n  };\n\n  return (\n    <div className=\"weekly-schedule-container\">\n      <h2>Weekly Schedule</h2>\n\n      <div className=\"date-navigation\">\n        <button onClick={loadPreviousWeek}>Previous Week</button>\n        <label>Current Date: {moment().format('YYYY-MM-DD')}</label>\n        <button onClick={loadNextWeek}>Next Week</button>\n      </div>\n\n      <div className=\"timezone-selector\">\n        <label>Timezone:</label>\n        <Select\n          options={[\n            { value: 'UTC', label: 'UTC' },\n            { value: 'America/New_York', label: 'America/New_York' },\n            // Add more timezone options as needed\n          ]}\n          value={{ value: timezone, label: timezone }}\n          onChange={handleTimezoneChange}\n        />\n      </div>\n\n      {/* Display weekly schedule */}\n      <div className=\"schedule-table\">\n        <table>\n          <tbody>\n            {getWorkingDays(selectedDate).map((day) => (\n              <tr key={day.format('YYYY-MM-DD')}>\n                <td>{day.format('YYYY-MM-DD')}</td>\n                {weeklySchedule\n                  .filter((item) => moment(item.Date).isSame(day, 'day'))\n                  .map((item) => (\n                    <td key={`${item.Date}-${item.Time}`}>\n                      {item.Time}\n                      <input\n                        type=\"checkbox\"\n                        onChange={() => handleCheckboxChange(item.Date, item.Time)}\n                      />\n                    </td>\n                  ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklySchedule;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}