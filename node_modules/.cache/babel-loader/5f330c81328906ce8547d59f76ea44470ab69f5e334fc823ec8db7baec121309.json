{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment-timezone';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklySchedule = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(moment());\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n  useEffect(() => {\n    fetchWeeklySchedule();\n  }, [selectedDate, timezone]);\n  const fetchWeeklySchedule = async () => {\n    try {\n      const response = await axios.get('/path/to/data.json'); // Update the path\n      const data = response.data;\n      setWeeklySchedule(data.map(item => ({\n        ...item,\n        isChecked: false\n      })));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleDateChange = date => {\n    setSelectedDate(moment(date));\n  };\n  const handleTimezoneChange = event => {\n    setTimezone(event.target.value);\n  };\n  const handleCheckboxChange = index => {\n    const updatedSchedule = [...weeklySchedule];\n    updatedSchedule[index].isChecked = !updatedSchedule[index].isChecked;\n    setWeeklySchedule(updatedSchedule);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weekly Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"datepicker\",\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        id: \"datepicker\",\n        selected: selectedDate.toDate(),\n        onChange: handleDateChange,\n        dateFormat: \"yyyy-MM-dd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"timezone\",\n        children: \"Timezone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"timezone\",\n        onChange: handleTimezoneChange,\n        value: timezone,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"UTC\",\n          children: \"UTC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"America/New_York\",\n          children: \"America/New_York\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weeklySchedule.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: `checkbox-${index}`,\n          checked: item.isChecked,\n          onChange: () => handleCheckboxChange(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `checkbox-${index}`,\n          children: [item.Date, \" \", item.Time, \" - \", item.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklySchedule, \"NlSjP8sAVrNwFg/TA0Crred5fgY=\");\n_c = WeeklySchedule;\nexport default WeeklySchedule;\nvar _c;\n$RefreshReg$(_c, \"WeeklySchedule\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","moment","axios","jsxDEV","_jsxDEV","WeeklySchedule","_s","selectedDate","setSelectedDate","timezone","setTimezone","weeklySchedule","setWeeklySchedule","fetchWeeklySchedule","response","get","data","map","item","isChecked","error","console","handleDateChange","date","handleTimezoneChange","event","target","value","handleCheckboxChange","index","updatedSchedule","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","selected","toDate","onChange","dateFormat","type","checked","Date","Time","Name","_c","$RefreshReg$"],"sources":["D:/React Project/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment-timezone';\nimport axios from 'axios';\n\nconst WeeklySchedule = () => {\n  const [selectedDate, setSelectedDate] = useState(moment());\n  const [timezone, setTimezone] = useState('UTC');\n  const [weeklySchedule, setWeeklySchedule] = useState([]);\n\n  useEffect(() => {\n    fetchWeeklySchedule();\n  }, [selectedDate, timezone]);\n\n  const fetchWeeklySchedule = async () => {\n    try {\n      const response = await axios.get('/path/to/data.json'); // Update the path\n      const data = response.data;\n      setWeeklySchedule(data.map(item => ({ ...item, isChecked: false })));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(moment(date));\n  };\n\n  const handleTimezoneChange = (event) => {\n    setTimezone(event.target.value);\n  };\n\n  const handleCheckboxChange = (index) => {\n    const updatedSchedule = [...weeklySchedule];\n    updatedSchedule[index].isChecked = !updatedSchedule[index].isChecked;\n    setWeeklySchedule(updatedSchedule);\n  };\n\n  return (\n    <div>\n      <h2>Weekly Schedule</h2>\n\n      <div>\n        <label htmlFor=\"datepicker\">Date:</label>\n        <DatePicker\n          id=\"datepicker\"\n          selected={selectedDate.toDate()}\n          onChange={handleDateChange}\n          dateFormat=\"yyyy-MM-dd\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"timezone\">Timezone:</label>\n        <select id=\"timezone\" onChange={handleTimezoneChange} value={timezone}>\n          <option value=\"UTC\">UTC</option>\n          <option value=\"America/New_York\">America/New_York</option>\n        </select>\n      </div>\n\n      <div>\n        {weeklySchedule.map((item, index) => (\n          <div key={index}>\n            <input\n              type=\"checkbox\"\n              id={`checkbox-${index}`}\n              checked={item.isChecked}\n              onChange={() => handleCheckboxChange(index)}\n            />\n            <label htmlFor={`checkbox-${index}`}>\n              {item.Date} {item.Time} - {item.Name}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklySchedule;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}